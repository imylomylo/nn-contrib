#!/bin/bash
CURRENTTIME=$(date +%s)
LONGESTCHAIN=$(/usr/local/bin/komodo-cli getinfo | jq '.longestchain')
echo "LONGESTCHAIN ${LONGESTCHAIN}"
LONGESTCHAINMINUS10=`expr ${LONGESTCHAIN} - 10`
LONGESTCHAINMINUS20=`expr ${LONGESTCHAIN} - 20`
LONGESTCHAINMINUS30=`expr ${LONGESTCHAIN} - 30`
LONGESTCHAINMINUS50=`expr ${LONGESTCHAIN} - 50`
LONGESTCHAINMINUS100=`expr ${LONGESTCHAIN} - 100`
echo "LONGESTCHAIN - 30 IS: ${LONGESTCHAINMINUS30}"
LONGESTCHAINHASH=$(/usr/local/bin/komodo-cli getblockhash ${LONGESTCHAIN})
echo ${LONGESTCHAINHASH}
LONGESTCHAINMINUS10HASH=$(/usr/local/bin/komodo-cli getblockhash ${LONGESTCHAINMINUS10})
LONGESTCHAINMINUS20HASH=$(/usr/local/bin/komodo-cli getblockhash ${LONGESTCHAINMINUS20})
LONGESTCHAINMINUS30HASH=$(/usr/local/bin/komodo-cli getblockhash ${LONGESTCHAINMINUS30})
LONGESTCHAINMINUS50HASH=$(/usr/local/bin/komodo-cli getblockhash ${LONGESTCHAINMINUS50})
LONGESTCHAINMINUS100HASH=$(/usr/local/bin/komodo-cli getblockhash ${LONGESTCHAINMINUS100})
echo ${LONGESTCHAINMINUS30HASH}
BLOCKTIMELATEST=$(/usr/local/bin/komodo-cli getblockheader ${LONGESTCHAINHASH} | jq '.time')
echo ${BLOCKTIMELATEST}
BLOCKTIMELATESTMINUS10=$(/usr/local/bin/komodo-cli getblockheader ${LONGESTCHAINMINUS10HASH} | jq '.time')
BLOCKTIMELATESTMINUS20=$(/usr/local/bin/komodo-cli getblockheader ${LONGESTCHAINMINUS20HASH} | jq '.time')
BLOCKTIMELATESTMINUS30=$(/usr/local/bin/komodo-cli getblockheader ${LONGESTCHAINMINUS30HASH} | jq '.time')
BLOCKTIMELATESTMINUS50=$(/usr/local/bin/komodo-cli getblockheader ${LONGESTCHAINMINUS50HASH} | jq '.time')
BLOCKTIMELATESTMINUS100=$(/usr/local/bin/komodo-cli getblockheader ${LONGESTCHAINMINUS100HASH} | jq '.time')
echo ${BLOCKTIMELATESTMINUS30}
TIMEBETWEEN10=$(expr ${BLOCKTIMELATEST} - ${BLOCKTIMELATESTMINUS10})
TIMEBETWEEN20=$(expr ${BLOCKTIMELATEST} - ${BLOCKTIMELATESTMINUS20})
TIMEBETWEEN30=$(expr ${BLOCKTIMELATEST} - ${BLOCKTIMELATESTMINUS30})
TIMEBETWEEN50=$(expr ${BLOCKTIMELATEST} - ${BLOCKTIMELATESTMINUS50})
TIMEBETWEEN100=$(expr ${BLOCKTIMELATEST} - ${BLOCKTIMELATESTMINUS100})
MINSEC10=$(awk "BEGIN {print ${TIMEBETWEEN10}/60}")
MINSEC20=$(awk "BEGIN {print ${TIMEBETWEEN20}/60}")
MINSEC30=$(awk "BEGIN {print ${TIMEBETWEEN30}/60}")
MINSEC50=$(awk "BEGIN {print ${TIMEBETWEEN50}/60}")
MINSEC100=$(awk "BEGIN {print ${TIMEBETWEEN100}/60}")
echo "10 blocks: ${MINSEC10} mins (total seconds ${TIMEBETWEEN10}s)"
echo "20 blocks: ${MINSEC20} mins (total seconds ${TIMEBETWEEN20}s)"
echo "30 blocks: ${MINSEC30} mins (total seconds ${TIMEBETWEEN30}s)"
echo "50 blocks: ${MINSEC50} mins (total seconds ${TIMEBETWEEN50}s)"
echo "100blocks: ${MINSEC100} mins (total seconds ${TIMEBETWEEN100}s)"
if [ ${TIMEBETWEEN10} -lt 400 ]
then
	echo ">>>>>> WARNING! TIME BETWEEN LAST 10 BLOCKS: >400s"
else
	echo "TIME BETWEEN LAST 10 BLOCKS: OK"
fi
if [ ${TIMEBETWEEN20} -lt 800 ]
then
	echo ">>>>>> WARNING! TIME BETWEEN LAST 20 BLOCKS: >800s"
else
	echo "TIME BETWEEN LAST 20 BLOCKS: OK"
fi
if [ ${TIMEBETWEEN30} -lt 1200 ]
then
	echo ">>>>>> WARNING! TIME BETWEEN LAST 30 BLOCKS: >1200s"
else
	echo "TIME BETWEEN LAST 30 BLOCKS: OK"
fi
if [ ${TIMEBETWEEN50} -lt 2000 ]
then
	echo ">>>>>> WARNING! TIME BETWEEN LAST 50 BLOCKS: >2000s"
else
	echo "TIME BETWEEN LAST 50 BLOCKS: OK"
fi
if [ ${TIMEBETWEEN100} -lt 4000 ]
then
	echo ">>>>>> WARNING! TIME BETWEEN LAST 100 BLOCKS: >4000s"
else
	echo "TIME BETWEEN LAST 100 BLOCKS: OK"
fi
#currenttime,longestchainheight,longestchainhash,longestchaintime,h10,t10,m10,s10,h20,t20,m20,s10,h30,t30,m30,s30,h50,t50,m50,s50,h100,t100,m100,s100
echo "${CURRENTTIME},${LONGESTCHAIN},${LONGESTCHAINHASH},${BLOCKTIMELATEST},${LONGESTCHAINMINUS10HASH},${LONGESTCHAINMINUS10},${MINSEC10},${BLOCKTIMELATESTMINUS10},${LONGESTCHAINMINUS20HASH},${LONGESTCHAINMINUS20},${MINSEC20},${BLOCKTIMELATESTMINUS20},${LONGESTCHAINMINUS30HASH},${LONGESTCHAINMINUS30},${MINSEC30},${BLOCKTIMELATESTMINUS30},${LONGESTCHAINMINUS50HASH},${LONGESTCHAINMINUS50},${MINSEC50},${BLOCKTIMELATESTMINUS50},${LONGESTCHAINMINUS100HASH},${LONGESTCHAINMINUS100},${MINSEC100},${BLOCKTIMELATESTMINUS100}">>/home/pioneermylo/contrib/logs/chaintimes.csv
